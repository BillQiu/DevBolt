/**
 * 提示模板常量
 * 这些模板用于生成最终的设计提示文本
 */

/**
 * 普通图像分析提示模板
 * 用于基于图像生成页面设计与开发指南
 */
export const IMAGE_PROMPT_TEMPLATE = `
# 页面设计与开发指南

## 设计分析
{analysis_result}

## 开发建议

请基于以上设计分析，提供以下方面的详细开发建议：

1. **技术栈选择**
   - 推荐的前端框架或库
   - 适合此设计的UI组件库
   - 必要的开发工具和依赖

2. **布局实现**
   - 页面结构的HTML/CSS架构
   - 响应式设计策略
   - 关键布局技术(如Grid, Flexbox等)

3. **组件设计**
   - 主要UI组件的分解
   - 组件之间的交互关系
   - 可复用组件的设计模式

4. **样式指南**
   - 精确的颜色代码
   - 字体和排版规范
   - 间距和尺寸规则
   - 动画和过渡效果

5. **开发步骤**
   - 实现此设计的推荐步骤
   - 潜在的技术挑战和解决方案
   - 优化和性能考虑

请尽可能提供具体的代码示例或伪代码，以帮助开发人员理解关键实现细节。
`;

/**
 * Figma设计分析提示模板
 * 用于基于Figma设计文件生成开发实现指南
 */
export const FIGMA_PROMPT_TEMPLATE = `
# Figma设计转换开发指南

## Figma设计分析
{analysis_result}

## 开发实现指南

请基于上述Figma设计分析，提供以下方面的详细开发实现指南：

1. **组件结构**
   - Figma组件到React/Vue/Angular组件的映射
   - 组件层次结构和依赖关系
   - 状态管理策略

2. **技术栈建议**
   - 最适合实现此设计的前端框架
   - 推荐的UI库或组件系统
   - CSS方法论(如Styled Components, Tailwind, CSS Modules等)

3. **精确规范**
   - 设计令牌(Design Tokens)定义
   - 颜色系统和变量
   - 排版系统
   - 间距和布局网格
   - 响应式断点

4. **交互实现**
   - 动画和过渡效果代码
   - 微交互实现
   - 状态变化和反馈

5. **开发路线图**
   - 组件开发优先级
   - 实现步骤和里程碑
   - 测试策略

请尽可能提供具体的代码结构、CSS变量定义和组件API设计，以确保开发实现与Figma设计保持高度一致。
`;
